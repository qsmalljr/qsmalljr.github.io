{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Image.js","webpack:///./src/pages/about.js","webpack:///./src/utils/helpers.js"],"names":["Image","forwardRef","_ref","ref","bsPrefix","className","fluid","rounded","roundedCircle","thumbnail","props","classes","createElement","displayName","defaultProps","data","site","siteMetadata","author","designations","unemployed","title","width","height","src","alt","map","attr","i","key","length","to","href","target","rel","query","getImageMap","images","regex","hasMultipleImages","limit","reduce","image","slug","node","relativePath","match","hasOwnProperty","push","childImageSharp","arr"],"mappings":"6FAAA,kFAWIA,EAAQ,IAAMC,YAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBC,EAAQJ,EAAKI,MACbC,EAAUL,EAAKK,QACfC,EAAgBN,EAAKM,cACrBC,EAAYP,EAAKO,UACjBC,EAAQ,YAA8BR,EAAM,CAAC,WAAY,YAAa,QAAS,UAAW,gBAAiB,cAE/GE,EAAW,YAAmBA,EAAU,OACxC,IAAIO,EAAU,IAAWL,GAASF,EAAW,SAAUG,GAAW,UAAWC,GAAiB,iBAAkBC,GAAaL,EAAW,cACxI,OAAoB,IAAMQ,cAAc,MAAO,YAAS,CAEtDT,IAAKA,GACJO,EAAO,CACRL,UAAW,IAAWA,EAAWM,SAGrCX,EAAMa,YAAc,QACpBb,EAAMc,aAzBa,CACjBR,OAAO,EACPC,SAAS,EACTC,eAAe,EACfC,WAAW,GAsBE,O,oCC/Bf,kIAMe,sBAAe,IAAD,IAAXM,KAiBPC,KAAKC,aANZC,EAXyB,EAWzBA,OAIAC,EAfyB,EAezBA,aACAC,EAhByB,EAgBzBA,WAMF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,aACX,kBAAC,IAAD,CAAWA,MAAM,aACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEb,eAAa,EACbc,MAAM,MACNC,OAAO,MACPC,IAAG,gCACHC,IAAKP,IAEP,6BAASb,UAAU,iCACjB,uBAAGA,UAAU,eACVc,EAAaO,KAAI,SAACC,EAAMC,GAAP,OAChB,0BAAMC,IAAKF,GAAX,IACQ,2BAAIA,GADZ,IAEGC,EAAIT,EAAaW,OAAS,GAAK,+CAItC,uBAAGzB,UAAU,iBAAb,2BAC0B,8BAAOa,GADjC,YAEE,gDAFF,0UAQA,uBAAGb,UAAU,OAAb,oOAWF,6BAASA,UAAU,eAChBe,GACC,oCACE,6BACA,uBAAGf,UAAU,cACX,uCACO,sEADP,0BAEgB,kBAAC,OAAD,CAAM0B,GAAG,WAAT,OAFhB,kBAIE,uBACEC,KAAK,4BACLC,OAAO,SACPC,IAAI,uBAHN,SAJF,WAqCT,IAAMC,EAAK,c,0HC9GH,G,oBAAA,CACbC,YAAa,SAACC,EAAQC,EAAOC,EAA2BC,GACtD,YADoE,IAAzCD,OAAoB,QAAqB,IAAdC,MAAQ,GACvDH,EAAOI,QAAO,SAACf,EAAKgB,GACzB,IAAMC,EAAOD,EAAME,KAAKC,aAAaC,MAAMR,GAAO,GAClD,GAAIC,EACF,GAAIb,EAAIqB,eAAeJ,GACjBjB,EAAIiB,GAAMb,QAAUU,GACtBd,EAAIiB,GAAMK,KAAKN,EAAME,KAAKK,gBAAgB3C,WACvC,CACL,IAAM4C,EAAM,GACZA,EAAIF,KAAKN,EAAME,KAAKK,gBAAgB3C,OACpCoB,EAAIiB,GAAQO,OAGdxB,EAAIiB,GAAQD,EAAME,KAAKK,gBAAgB3C,MAEzC,OAAOoB,IACN","file":"component---src-pages-about-js-a5e37693e43c833d9193.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nvar Image = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      rounded = _ref.rounded,\n      roundedCircle = _ref.roundedCircle,\n      thumbnail = _ref.thumbnail,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"fluid\", \"rounded\", \"roundedCircle\", \"thumbnail\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  var classes = classNames(fluid && bsPrefix + \"-fluid\", rounded && \"rounded\", roundedCircle && \"rounded-circle\", thumbnail && bsPrefix + \"-thumbnail\");\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import React from \"react\"\nimport { PageLayout, PageTitle } from \"../components\"\nimport { Container, Image } from \"react-bootstrap\"\nimport { Link, graphql } from \"gatsby\"\nimport { SEO } from \"../utils\"\n\nexport default ({ data }) => {\n  // const MediaLink = ({ title, author, link }) => (\n  //   <li key={title} style={{ color: \"gray\" }}>\n  //     <a rel=\"noopener noreferrer\" href={link}>\n  //       {title}\n  //     </a>\n  //     &nbsp;-<i>{author}</i>\n  //   </li>\n  // )\n\n  const {\n    author,\n    // occupation,\n    // readingList,\n    // showsList,\n    designations,\n    unemployed,\n  } = data.site.siteMetadata\n\n  // const bookLinks = readingList.map(book => MediaLink(book))\n  // const showLinks = showsList.map(show => MediaLink(show))\n\n  return (\n    <PageLayout>\n      <SEO title=\"About Me\" />\n      <PageTitle title=\"About Me\" />\n      <Container>\n        <Image\n          roundedCircle\n          width=\"140\"\n          height=\"140\"\n          src={`../../icons/selfie-close.jpeg`}\n          alt={author}\n        />\n        <article className=\"w-75 m-auto pt-2 text-justify\">\n          <p className=\"text-center\">\n            {designations.map((attr, i) => (\n              <span key={attr}>\n                &nbsp;<b>{attr}</b>&nbsp;\n                {i < designations.length - 1 && <>||</>}\n              </span>\n            ))}\n          </p>\n          <p className=\"i-5 mt-4 pt-2\">\n            Hello there! My name is <b>{`${author}`}</b>. I am a&nbsp;\n            <b>Software Engineer</b>! I graduated from the University of Massachusetts,\n            Amherst with a BS in Computer Science and a BBA in Management. I have experience\n            as a Software Engineer in Full Stack, Mobile App, and Game Development. I have worked\n            with a number of different programming languages such as Java, C#, PHP, React,\n            Javascript, SQL, and Python.\n          </p>\n          <p className=\"i-5\">\n          I am a hard working, highly motivated individual who has a passion\n          for solving complex problems and Software Engineering as a whole. In my free time\n          I enjoy creating games in Unity and learning about game design principles.\n          </p>\n          {/* <p className=\"i-5\">\n            Check out my <Link to=\"/projects\">projects</Link> to see what I've\n            been up to! Or check out my <Link to=\"/blog\">blog</Link> to see\n            what's recently caught my eye!\n          </p> */}\n        </article>\n        <article className=\"w-75 m-auto\">\n          {unemployed && (\n            <>\n              <hr />\n              <p className=\"unemployed\">\n                <small>\n                  I am <b>currently looking for new opportunities</b>! If you\n                  like what you <Link to=\"/resume\">see</Link>, let's get\n                  in&nbsp;\n                  <a\n                    href=\"mailto:qsmalljr@gmail.com\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    touch\n                  </a>\n                  !\n                </small>\n              </p>\n            </>\n          )}\n          {/* <hr />\n          <h5 className=\"watch-list-title pt-4\">\n            Here are a couple of books from my reading list:\n          </h5>\n          <ul style={{ fontSize: \"0.9rem\", listStyle: \"none\" }}>{bookLinks}</ul>\n          <h5 className=\"watch-list-title pt-4\">\n            Here are a couple of shows from my watch list:\n          </h5>\n          <ul style={{ fontSize: \"0.9rem\", listStyle: \"none\" }}>{showLinks}</ul>\n          <h5 className=\"watch-list-title pt-4\">\n            Here are a couple of movies from my watch list:\n          </h5>\n          <p>\n            <i>...waaaay too many to list.</i>\n          </p> */}\n        </article>\n      </Container>\n    </PageLayout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        unemployed\n        occupation\n        author\n        designations\n        readingList {\n          title\n          author\n          link\n        }\n        showsList {\n          title\n          author\n          link\n        }\n      }\n    }\n  }\n`\n","export default {\n  getImageMap: (images, regex, hasMultipleImages = false, limit = 3) => {\n    return images.reduce((map, image) => {\n      const slug = image.node.relativePath.match(regex)[0]\n      if (hasMultipleImages) {\n        if (map.hasOwnProperty(slug)) {\n          if (map[slug].length <= limit)\n            map[slug].push(image.node.childImageSharp.fluid)\n        } else {\n          const arr = []\n          arr.push(image.node.childImageSharp.fluid)\n          map[slug] = arr\n        }\n      } else {\n        map[slug] = image.node.childImageSharp.fluid\n      }\n      return map\n    }, {})\n  },\n}\n"],"sourceRoot":""}